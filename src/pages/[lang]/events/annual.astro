---
import BaseLayout from "@layout/BaseLayout.astro";
import { getTranslation } from "@utils/i18n";
import { getCollection } from "astro:content";

// Static paths for language routes
export function getStaticPaths() {
  return [
    { params: { lang: 'ko' } },
    { params: { lang: 'en' } }
  ];
}

// URL 파라미터에서 언어 추출
const { lang } = Astro.params;
const currentLang: 'ko' | 'en' = (lang === 'ko' || lang === 'en') ? lang : 'ko';

// Load news content
const allNews = await getCollection('news');

// Filter only event category news and sort by date desc (farther future first)
const eventNews = allNews
  .filter(item => item.data.category === 'event')
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

// Helper: format full date per locale
const formatFullDate = (date: Date) =>
  date.toLocaleDateString(currentLang === 'ko' ? 'ko-KR' : 'en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });


// Build list from content with full-date formatting
const annualEventsResolved = eventNews.map((item) => {
  const image = Array.isArray(item.data.images) && item.data.images.length > 0 ? item.data.images[0].src : undefined;
  return {
    title: item.data.title,
    description: item.data.description,
    image,
    link: `/${currentLang}/events/news/${item.id}`,
    isActive: true,
    dateText: formatFullDate(item.data.date)
  };
});
---

<BaseLayout lang={currentLang} title={getTranslation('events.annual.title', currentLang)}>
  <!-- Hero Section -->
  <section class="relative py-20 bg-gradient-to-br from-teal-50 to-blue-50">
    <div class="container mx-auto px-4 pt-header">
      <div class="text-center">
        <h1 class="text-4xl md:text-6xl font-bold text-gray-800 mb-4">
          {getTranslation('events.annual.title', currentLang)}
        </h1>
        <p class="text-xl text-gray-600 mb-8">
          {getTranslation('events.annual.subtitle', currentLang)}
        </p>
      </div>
    </div>
  </section>

  <!-- Annual Events -->
  <section class="py-20 bg-white">
    <div class="container mx-auto px-4">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {annualEventsResolved.map((event) => (
          <div class={`bg-white rounded-xl shadow-lg overflow-hidden transition-all duration-300 ${event.isActive ? 'hover:shadow-xl cursor-pointer' : 'opacity-75'}`}>
              <a href={event.link} class="block">
                <div class="h-48 bg-gradient-to-br from-teal-400 to-blue-500 flex items-center justify-center relative overflow-hidden">
                  {event.image && (
                    <img src={event.image} alt={event.title} class="absolute inset-0 w-full h-full object-cover" />
                  )}
                  <div class="absolute inset-0 bg-gradient-to-br from-black/20 to-black/40 flex items-center justify-center">
                    <div class="bg-white/90 backdrop-blur-sm rounded-full p-3 shadow-lg">
                      <svg class="h-8 w-8 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                      </svg>
                    </div>
                  </div>
                </div>
                <div class="p-6">
                  <div class="flex items-center justify-between mb-3">
                    <h3 class="text-xl font-semibold text-gray-800">{event.title}</h3>
                    <span class="text-sm text-teal-600 font-medium">{event.dateText}</span>
                  </div>
                  <p class="text-gray-600 leading-relaxed">{event.description}</p>
                </div>
              </a>
          </div>
        ))}
      </div>
    </div>
  </section>

</BaseLayout> 