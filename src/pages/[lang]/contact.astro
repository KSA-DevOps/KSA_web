---
import BaseLayout from "@layout/BaseLayout.astro";
import Button from "@ui/Button.astro";
import { getTranslation } from "@utils/i18n";
import { executiveData } from "../../data/executives";

// Static paths for language routes
export function getStaticPaths() {
  return [
    { params: { lang: 'ko' } },
    { params: { lang: 'en' } }
  ];
}

// URL 파라미터에서 언어 추출
const { lang } = Astro.params;
const currentLang: 'ko' | 'en' = (lang === 'ko' || lang === 'en') ? lang : 'ko';

// Static site에서는 서버 사이드 폼 처리가 불가능하므로 제거

// FAQ 데이터
const faqData = currentLang === 'ko' ? [
  {
    question: "KSA에 어떻게 가입할 수 있나요?",
    answer: "KSA는 홍콩과기대에 재학 중인 모든 한국 학생에게 자동으로 개방됩니다. 별도의 가입 절차는 필요하지 않습니다."
  },
  {
    question: "행사에 참여하고 싶은데 어떻게 해야 하나요?",
    answer: "KSA 페이스북 그룹과 이메일을 통해 행사 정보를 확인할 수 있습니다. 대부분의 행사는 사전 등록이 필요합니다."
  },
  {
    question: "건의사항이나 문의사항이 있는데 어떻게 연락하나요?",
    answer: "이 페이지 하단의 폼을 통해 문의하실 수 있습니다. 익명 제출도 가능하며, 1주일 내에 답변드립니다."
  },
  {
    question: "KSA 임원진이 되고 싶은데 어떻게 해야 하나요?",
    answer: "매년 3월경에 임원진 선거가 진행됩니다. 페이스북 그룹을 통해 선거 공고를 확인하실 수 있습니다."
  }
] : [
  {
    question: "How can I join KSA?",
    answer: "KSA is automatically open to all Korean students enrolled at HKUST. No separate registration process is required."
  },
  {
    question: "How can I participate in events?",
    answer: "You can check event information through the KSA Facebook group and email. Most events require pre-registration."
  },
  {
    question: "How can I contact KSA with questions or suggestions?",
    answer: "You can contact us through the form at the bottom of this page. Anonymous submissions are also possible, and we will respond within a week."
  },
  {
    question: "How can I become part of the KSA executive committee?",
    answer: "Executive committee elections are held annually around March. You can check election announcements through the Facebook group."
  }
];
---

<BaseLayout lang={currentLang} title={getTranslation('contact.title', currentLang)}>
  <!-- Contact Forms Section -->
  <section class="py-20 bg-white">
    <div class="container mx-auto px-4 pt-header">
      <div class="text-center mb-12">
        <h2 class="text-3xl font-bold text-gray-800 mb-4">
          {currentLang === 'ko' ? '문의하기' : 'Contact Us'}
        </h2>
        <p class="text-lg text-gray-600 max-w-4xl mx-auto">
          {currentLang === 'ko' 
            ? '일반 문의사항이나 IT 관련 문의사항을 선택하여 연락해 주세요.' 
            : 'Please choose between general inquiries or IT-related inquiries to contact us.'}
        </p>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 max-w-6xl mx-auto">
        <!-- General Contact Form -->
        <div class="bg-white rounded-2xl shadow-xl p-8 border border-gray-200">
          <div class="text-center mb-6">
            <h3 class="text-2xl font-bold text-gray-800 mb-2">
              {currentLang === 'ko' ? '일반 문의' : 'General Inquiry'}
            </h3>
            <p class="text-gray-600">
              {currentLang === 'ko' 
                ? '질문이나 건의사항이 있으시면 연락해 주세요. 익명 제출도 가능합니다.' 
                : 'If you have any questions or suggestions, please contact us. Anonymous submissions are also possible.'}
            </p>
          </div>
          
          <form action="https://formspree.io/f/mblkklbd" method="POST" class="space-y-6" id="contact-form">
            <!-- Email Field -->
            <div id="email-container" class="transition-all duration-300">
              <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
                {currentLang === 'ko' ? 'HKUST 이메일 주소 *' : 'HKUST Email Address *'}
              </label>
              <input
                type="email"
                id="email"
                name="email"
                required
                pattern="[a-zA-Z0-9._%+-]+@connect\.ust\.hk$"
                placeholder={currentLang === 'ko' ? 'yourname@connect.ust.hk' : 'yourname@connect.ust.hk'}
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-transparent transition-all duration-300"
                onchange="validateForm()"
                oninput="validateForm()"
              />
              <p class="text-sm text-gray-500 mt-1">
                {currentLang === 'ko' 
                  ? 'HKUST 이메일 주소(@connect.ust.hk)만 허용됩니다' 
                  : 'Only HKUST email addresses (@connect.ust.hk) are accepted'}
              </p>
              <p id="email-error" class="text-sm text-red-600 mt-1 hidden">
                {currentLang === 'ko' 
                  ? '올바른 HKUST 이메일 주소를 입력해주세요 (@connect.ust.hk)' 
                  : 'Please enter a valid HKUST email address (@connect.ust.hk)'}
              </p>
              <p id="anonymous-notice" class="text-sm text-blue-600 mt-2 hidden bg-blue-50 p-3 rounded-lg border border-blue-200">
                <span class="font-medium">ℹ️</span> {currentLang === 'ko' 
                  ? '익명 제출을 선택하셨습니다. 이메일 주소는 필요하지 않습니다.' 
                  : 'You have selected anonymous submission. Email address is not required.'}
              </p>
            </div>

            <!-- Anonymous Checkbox -->
            <div class="flex items-center">
              <input
                type="checkbox"
                id="anonymous"
                name="anonymous"
                class="h-4 w-4 text-teal-600 focus:ring-teal-500 border-gray-300 rounded"
                onchange="toggleEmailField(this)"
              />
              <label for="anonymous" class="ml-2 block text-sm text-gray-700">
                {currentLang === 'ko' ? '익명으로 제출' : 'Submit anonymously'}
              </label>
            </div>

            <!-- Message Field -->
            <div>
              <label for="message" class="block text-sm font-medium text-gray-700 mb-2">
                {currentLang === 'ko' ? '문의사항/건의사항 *' : 'Inquiry/Suggestion *'}
              </label>
              <textarea
                id="message"
                name="message"
                required
                rows="6"
                placeholder={currentLang === 'ko' 
                  ? '문의사항, 건의사항 또는 피드백을 공유해 주세요...' 
                  : 'Please share your inquiry, suggestion, or feedback...'}
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-transparent transition-colors resize-none"
                onchange="validateForm()"
                oninput="validateForm()"
              ></textarea>
            </div>

            <!-- Submit Button -->
            <div class="flex justify-center">
              <Button 
                type="submit" 
                variant="primary" 
                className="px-8 py-3 text-lg transition-all duration-300" 
                id="submit-button"
                disabled={false}
              >
                {currentLang === 'ko' ? '문의사항 제출' : 'Submit Inquiry'}
              </Button>
            </div>
          </form>

          <!-- Additional Information -->
          <div class="mt-6 text-center">
            <div class="bg-blue-50 rounded-lg p-4">
              <h4 class="text-sm font-semibold text-blue-800 mb-2">
                {currentLang === 'ko' ? '작동 방식' : 'How it works'}
              </h4>
              <ul class="text-blue-700 space-y-1 text-xs">
                <li>• {currentLang === 'ko' 
                  ? '문의사항은 KSA 임원진이 검토합니다' 
                  : 'Your inquiry will be reviewed by the KSA executive committee'}</li>
                <li>• {currentLang === 'ko' 
                  ? '익명 제출은 완전히 기밀입니다' 
                  : 'Anonymous submissions are completely confidential'}</li>
              </ul>
            </div>
          </div>
        </div>

        <!-- IT Team Contact Form -->
        <div class="bg-white rounded-2xl shadow-xl p-8 border border-purple-200">
          <div class="text-center mb-6">
            <h3 class="text-2xl font-bold text-gray-800 mb-2">
              {currentLang === 'ko' ? 'IT Team 문의' : 'IT Team Inquiry'}
            </h3>
            <p class="text-gray-600">
              {currentLang === 'ko' 
                ? '웹사이트 관련 기술적 문제나 개선 제안이 있으시면 IT Team에게 문의해 주세요.' 
                : 'If you have technical issues with the website or improvement suggestions, please contact the IT Team.'}
            </p>
          </div>
          
          <form action="https://formspree.io/f/mblkklbd" method="POST" class="space-y-6" id="it-contact-form">
            <!-- Hidden field to identify IT team inquiries -->
            <input type="hidden" name="inquiry_type" value="it_team" />
            
            <!-- Email Field -->
            <div id="it-email-container" class="transition-all duration-300">
              <label for="it-email" class="block text-sm font-medium text-gray-700 mb-2">
                {currentLang === 'ko' ? 'HKUST 이메일 주소 *' : 'HKUST Email Address *'}
              </label>
              <input
                type="email"
                id="it-email"
                name="email"
                required
                pattern="[a-zA-Z0-9._%+-]+@connect\.ust\.hk$"
                placeholder={currentLang === 'ko' ? 'yourname@connect.ust.hk' : 'yourname@connect.ust.hk'}
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300"
                onchange="validateITForm()"
                oninput="validateITForm()"
              />
              <p class="text-sm text-gray-500 mt-1">
                {currentLang === 'ko' 
                  ? 'HKUST 이메일 주소(@connect.ust.hk)만 허용됩니다' 
                  : 'Only HKUST email addresses (@connect.ust.hk) are accepted'}
              </p>
              <p id="it-email-error" class="text-sm text-red-600 mt-1 hidden">
                {currentLang === 'ko' 
                  ? '올바른 HKUST 이메일 주소를 입력해주세요 (@connect.ust.hk)' 
                  : 'Please enter a valid HKUST email address (@connect.ust.hk)'}
              </p>
            </div>

            <!-- Issue Type Field -->
            <div>
              <label for="issue-type" class="block text-sm font-medium text-gray-700 mb-2">
                {currentLang === 'ko' ? '문의 유형 *' : 'Inquiry Type *'}
              </label>
              <select
                id="issue-type"
                name="issue_type"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300"
                onchange="validateITForm()"
              >
                <option value="">{currentLang === 'ko' ? '문의 유형을 선택하세요' : 'Select inquiry type'}</option>
                <option value="bug_report">{currentLang === 'ko' ? '버그 리포트' : 'Bug Report'}</option>
                <option value="feature_request">{currentLang === 'ko' ? '기능 요청' : 'Feature Request'}</option>
                <option value="performance_issue">{currentLang === 'ko' ? '성능 문제' : 'Performance Issue'}</option>
                <option value="ui_improvement">{currentLang === 'ko' ? 'UI/UX 개선 제안' : 'UI/UX Improvement'}</option>
                <option value="content_update">{currentLang === 'ko' ? '콘텐츠 업데이트 요청' : 'Content Update Request'}</option>
                <option value="other">{currentLang === 'ko' ? '기타' : 'Other'}</option>
              </select>
            </div>

            <!-- Message Field -->
            <div>
              <label for="it-message" class="block text-sm font-medium text-gray-700 mb-2">
                {currentLang === 'ko' ? '상세 내용 *' : 'Detailed Description *'}
              </label>
              <textarea
                id="it-message"
                name="message"
                required
                rows="6"
                placeholder={currentLang === 'ko' 
                  ? '문제 상황, 개선 제안, 또는 요청사항을 자세히 설명해 주세요. 가능하다면 스크린샷이나 구체적인 단계를 포함해 주세요...' 
                  : 'Please describe the issue, improvement suggestion, or request in detail. If possible, include screenshots or specific steps...'}
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-colors resize-none"
                onchange="validateITForm()"
                oninput="validateITForm()"
              ></textarea>
            </div>

            <!-- Submit Button -->
            <div class="flex justify-center">
              <Button 
                type="submit" 
                className="px-8 py-3 text-lg transition-all duration-300" 
                id="it-submit-button"
                disabled={false}
              >
                {currentLang === 'ko' ? '문의사항 제출' : 'Submit to IT Team'}
              </Button>
            </div>
          </form>

        </div>
      </div>

      <script is:inline>
        // DOM이 완전히 로드된 후 실행
        document.addEventListener('DOMContentLoaded', function() {
          // 폼 제출 후 리다이렉트된 경우 초기화
          if (window.location.search.includes('success=true')) {
            resetForm();
            // 성공 메시지 표시
            const successMessage = '문의사항이 성공적으로 제출되었습니다. 감사합니다!';
            alert(successMessage);
            // URL에서 성공 파라미터 제거
            window.history.replaceState({}, document.title, window.location.pathname);
          }
          
          // 초기 상태 설정
          const checkbox = document.getElementById('anonymous');
          if (checkbox) {
            toggleEmailField(checkbox);
          }
          
          // 초기 폼 유효성 검사
          validateForm();
          validateITForm();
        });

        function toggleEmailField(checkbox) {
          const emailField = document.getElementById('email');
          const emailLabel = emailField?.previousElementSibling;
          const emailError = document.getElementById('email-error');
          const emailContainer = document.getElementById('email-container');
          const anonymousNotice = document.getElementById('anonymous-notice');
          
          if (!emailField || !emailLabel || !emailError || !emailContainer || !anonymousNotice) {
            console.log('Some elements not found:', { emailField, emailLabel, emailError, emailContainer, anonymousNotice });
            return;
          }
          
          if (checkbox.checked) {
            // 익명 체크 시 이메일 필드 비활성화
            emailField.disabled = true;
            emailField.required = false;
            emailField.value = '';
            emailField.classList.add('bg-gray-100', 'text-gray-500', 'cursor-not-allowed');
            emailField.classList.remove('focus:ring-2', 'focus:ring-teal-500');
            emailLabel.classList.add('text-gray-500');
            emailError.classList.add('hidden');
            emailContainer.classList.add('opacity-60');
            anonymousNotice.classList.remove('hidden');
            console.log('Email field disabled');
          } else {
            // 익명 해제 시 이메일 필드 활성화
            emailField.disabled = false;
            emailField.required = true;
            emailField.classList.remove('bg-gray-100', 'text-gray-500', 'cursor-not-allowed');
            emailField.classList.add('focus:ring-2', 'focus:ring-teal-500');
            emailLabel.classList.remove('text-gray-500');
            emailContainer.classList.remove('opacity-60');
            anonymousNotice.classList.add('hidden');
            console.log('Email field enabled');
          }
        }

        function validateForm() {
          const emailField = document.getElementById('email');
          const emailError = document.getElementById('email-error');
          const submitButton = document.getElementById('submit-button');
          const messageField = document.getElementById('message');
          const emailPattern = /^[a-zA-Z0-9._%+-]+@connect\.ust\.hk$/;
          
          if (!emailField || !emailError || !submitButton || !messageField) return;
          
          let isValid = true;
          
          // 이메일 유효성 검사 (익명이 아닌 경우에만)
          const anonymousCheckbox = document.getElementById('anonymous');
          if (!anonymousCheckbox?.checked) {
            if (!emailField.value || !emailPattern.test(emailField.value)) {
              emailError.classList.remove('hidden');
              emailField.classList.add('border-red-500');
              emailField.classList.remove('border-gray-300');
              isValid = false;
            } else {
              emailError.classList.add('hidden');
              emailField.classList.remove('border-red-500');
              emailField.classList.add('border-gray-300');
            }
          } else {
            // 익명인 경우 이메일 에러 숨김
            emailError.classList.add('hidden');
            emailField.classList.remove('border-red-500');
            emailField.classList.add('border-gray-300');
          }
          
          // 메시지 필드 검사
          if (!messageField.value.trim()) {
            isValid = false;
          }
          
          // 버튼 상태 업데이트
          submitButton.disabled = !isValid;
          if (!isValid) {
            submitButton.classList.add('opacity-50', 'cursor-not-allowed');
          } else {
            submitButton.classList.remove('opacity-50', 'cursor-not-allowed');
          }
        }

        function validateEmail(input) {
          validateForm();
        }

        // 폼 제출 후 초기화
        function resetForm() {
          const form = document.getElementById('contact-form');
          const emailField = document.getElementById('email');
          const messageField = document.getElementById('message');
          const anonymousCheckbox = document.getElementById('anonymous');
          const emailError = document.getElementById('email-error');
          const anonymousNotice = document.getElementById('anonymous-notice');
          const emailContainer = document.getElementById('email-container');
          const emailLabel = emailField?.previousElementSibling;
          
          if (form && emailField && messageField && anonymousCheckbox) {
            // 폼 필드 초기화
            form.reset();
            
            // 이메일 필드 상태 초기화
            emailField.disabled = false;
            emailField.required = true;
            emailField.classList.remove('bg-gray-100', 'text-gray-500', 'cursor-not-allowed', 'border-red-500');
            emailField.classList.add('focus:ring-2', 'focus:ring-teal-500', 'border-gray-300');
            
            // 라벨 상태 초기화
            if (emailLabel) {
              emailLabel.classList.remove('text-gray-500');
            }
            
            // 컨테이너 상태 초기화
            if (emailContainer) {
              emailContainer.classList.remove('opacity-60');
            }
            
            // 에러 메시지 숨김
            if (emailError) {
              emailError.classList.add('hidden');
            }
            
            // 익명 알림 숨김
            if (anonymousNotice) {
              anonymousNotice.classList.add('hidden');
            }
            
            console.log('Form reset successfully');
          }
        }

        // IT Team 폼 유효성 검사
        function validateITForm() {
          const emailField = document.getElementById('it-email');
          const emailError = document.getElementById('it-email-error');
          const submitButton = document.getElementById('it-submit-button');
          const messageField = document.getElementById('it-message');
          const issueTypeField = document.getElementById('issue-type');
          const emailPattern = /^[a-zA-Z0-9._%+-]+@connect\.ust\.hk$/;
          
          if (!emailField || !emailError || !submitButton || !messageField || !issueTypeField) return;
          
          let isValid = true;
          
          // 이메일 유효성 검사
          if (!emailField.value || !emailPattern.test(emailField.value)) {
            emailError.classList.remove('hidden');
            emailField.classList.add('border-red-500');
            emailField.classList.remove('border-gray-300');
            isValid = false;
          } else {
            emailError.classList.add('hidden');
            emailField.classList.remove('border-red-500');
            emailField.classList.add('border-gray-300');
          }
          
          // 메시지 필드 검사
          if (!messageField.value.trim()) {
            isValid = false;
          }
          
          // 이슈 타입 검사
          if (!issueTypeField.value) {
            isValid = false;
          }
          
          // 버튼 상태 업데이트
          submitButton.disabled = !isValid;
          if (!isValid) {
            submitButton.classList.add('opacity-50', 'cursor-not-allowed');
          } else {
            submitButton.classList.remove('opacity-50', 'cursor-not-allowed');
          }
        }

        // IT Team 폼 제출 후 초기화
        function resetITForm() {
          const form = document.getElementById('it-contact-form');
          if (form) {
            form.reset();
            validateITForm();
          }
        }
      </script>
    </div>
  </section>


</BaseLayout>
